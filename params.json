{"name":"Django-live-logging","tagline":"Allow live editing of logging configuration in django projects and/or log to internal database table.","body":"Django Live Logging\r\n===================\r\n\r\nAllow live editing of logging configuration in django projects and/or log to internal database table.\r\n\r\n\r\nThis project does not pretend to be 'state of the art',\r\nwas written in few hours to help to troubleshoot applications where is not possible to access to log file easily.\r\nIt allow you to temporally enable database logging and change/add logging level and loggers using django admin interface.\r\n\r\nThanks to Joeri Bekker for the https://github.com/joeribekker/django-logdb application\r\nfrom which the database logging part of this package was taken.\r\n\r\n\r\n**note**:: Only tested on Django 1.7\r\n\r\n\r\nQuick Installation\r\n------------------\r\n\r\n   pip install django-live-logging\r\n\r\n\r\nOnce installed, update your Django `settings.py` and add ``live_logging`` to your\r\nINSTALLED_APPS\r\n\r\n    INSTALLED_APPS = (\r\n        'django.contrib.admin',\r\n        'django.contrib.auth',\r\n        'django.contrib.contenttypes',\r\n        'django.contrib.sessions',\r\n        ...\r\n        'live_logging',\r\n    )\r\n\r\n\r\nConfigure Database logging\r\n--------------------------\r\nCreate an handler in your logging configuration to store into database.\r\n\r\n    LOGGING = {\r\n        ...\r\n         'handlers': {\r\n            ...\r\n            'db': {\r\n                'level': 'DEBUG',\r\n                'class': 'live_logging.handlers.DjangoDatabaseHandler',\r\n                },\r\n          }\r\n        }\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}